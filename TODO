1. Add atom (using reductions): Quantile([f_i(x) <= 0, ...], fraction)
	a. Replace this atom with variable t.
	b. Add chance constraint a_i^Tx - b <= t for fraction i's.
	Note: Only works for convex inequality constraints f_i(x) <= 0.

2. Look up references for a paper in Optima/Optimization Letters. 
   This technique is a special case of majorization-minimization on 
   constraints with only 2 steps.

3. Allow user to specify weights on constraints. Then the constraint is 
   \sum_{i=1}^n w_i*1{f_i(x) <= 0} <= p, where \sum_{i=1}^n w_i = 1. 
   By default, weights are uniform, i.e., w_i = 1/n for i = 1,...,n.
   Weights should be specified as an array of the same size as its
   corresponding constraint. (May store in vectorized/flattened form).

4. Introduce problem as f_i(x) <= 0 for a fraction p of i = 1,...,n. 
   Elaborate that this is specific case of probabilistic constraint 
   where the probability distribution is discrete.
   
5. Determine general method for reducing quantiles to solvable chance 
   constrained problem.
